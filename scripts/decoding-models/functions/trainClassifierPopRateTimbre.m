function [trainedClassifier, validationAccuracy, validationPredictions]...
	= trainClassifierPopRateTimbre(T)

inputTable = T;
predictors = inputTable(:, 1:end-1);
predictorNames = inputTable.Properties.VariableNames(1:end-1);
response = inputTable.Response;
classNames = [1; 2];

% Train a classifier
% This code specifies all the classifier options and trains the classifier.
classificationSVM = fitcsvm(...
	predictors, ...
	response, ...
	'KernelFunction', 'linear', ...
	'PolynomialOrder', [], ...
	'KernelScale', 'auto', ...
	'BoxConstraint', 1, ...
	'Standardize', true, ...
	'ClassNames', classNames);

% Create the result struct with predict function
predictorExtractionFcn = @(t) t(:,  predictorNames);
svmPredictFcn = @(x) predict(classificationSVM, x);
trainedClassifier.predictFcn = @(x) svmPredictFcn(predictorExtractionFcn(x));

% Add additional fields to the result struct
trainedClassifier.ClassificationSVM = classificationSVM;
trainedClassifier.About = ['This struct is a trained model exported from ' ...
	'Classification Learner R2023b.'];
trainedClassifier.HowToPredict = sprintf(['To make predictions on a new table,' ...
	' T, use: \n  [yfit,scores] = c.predictFcn(T) \nreplacing ''c'' with ' ...
	'the name of the variable that is this struct, e.g. ''trainedModel''.' ...
	' \n \nThe table, T, must contain the variables returned by: \n  ' ...
	'c.RequiredVariables \nVariable formats (e.g. matrix/vector, datatype) ' ...
	'must match the original training data. \nAdditional variables are ignored.' ...
	' \n \nFor more information, see <a href="matlab:helpview(fullfile(docroot,' ...
	' ''stats'', ''stats.map''), ''appclassification_exportmodeltoworkspace'')"' ...
	'>How to predict using an exported model</a>.']);

% Perform cross-validation
partitionedModel = crossval(trainedClassifier.ClassificationSVM, 'KFold', 5);

% Compute validation predictions
[validationPredictions, ~] = kfoldPredict(partitionedModel);

% Compute validation accuracy
validationAccuracy = 1 - kfoldLoss(partitionedModel, 'LossFun', 'ClassifError');

end